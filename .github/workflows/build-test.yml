# File path: .github/workflows/build-test.yml

name: Build and Test

on:
  push:
    branches: [ main, master, develop ]
  pull_request:
    branches: [ main, master, develop ]
  workflow_call:
    outputs:
      build_success:
        description: "Indicates if build was successful"
        value: ${{ jobs.build.outputs.build_success }}

env:
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: 1

jobs:
  build:
    name: Build and Test
    runs-on: ubuntu-latest
    outputs:
      build_success: ${{ steps.set_success.outputs.build_success }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
          components: rustfmt, clippy

      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Check formatting
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check

      - name: Clippy
        uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: -- -D warnings

      - name: Build
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --verbose

      - name: Run tests
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --verbose

      - name: Set build success output
        id: set_success
        run: echo "build_success=true" >> $GITHUB_OUTPUT